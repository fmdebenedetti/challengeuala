# Puerto del servidor
server.port=8081

# MongoDB
# spring.data.mongodb.uri=mongodb://mongo:27017/microblogging
spring.data.mongodb.uri=mongodb://localhost:27017/microblogging

# Redis
# spring.redis.host=redis
spring.redis.host=localhost
spring.redis.port=6379

# Kafka
# spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=microblogging-consumer-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Log level
logging.level.org.springframework=INFO
logging.level.com.uala.microblogging=DEBUG
logging.file.name=/app/logs/microblogging.log

# Permitir override de beans si se da el caso
spring.main.allow-bean-definition-overriding=true

spring.profiles.active=docker
